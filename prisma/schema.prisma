generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/* ---------- NextAuth adapter-required models ---------- */
model Account {
  id                 Int     @id @default(autoincrement())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? 
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

/* ---------- Your app models ---------- */
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?

  accounts Account[]
  sessions Session[]

  expenses Expense[]
  budgets  Budget[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Expense {
  id         String   @id @default(cuid())
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String
  amount     Float
  category   String
  description String?
  date       DateTime @default(now())
  receiptUrl String?
  createdAt  DateTime @default(now())
}

model Budget {
  id              String          @id @default(cuid())
  user            User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          String
  trackingPeriod  TrackingPeriod? @relation(fields: [trackingPeriodId], references: [id])
  trackingPeriodId String?
  amount          Float
  startDate       DateTime
  endDate         DateTime
  createdAt       DateTime @default(now())
}


model TrackingPeriod {
  id        String   @id @default(cuid())
  name      String
  startDate DateTime
  endDate   DateTime

  budgets Budget[]
}
